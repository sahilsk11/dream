{"version":3,"sources":["Navbar/TopNav/TopNav.jsx","Navbar/DreamBubble/DreamBubble.jsx","Navbar/LeftNavBar/LeftNavBar.jsx","Navbar/LeftNavBar/LeftNavSpaceGuys/LeftNavSpaceGuys.jsx","Navbar/Navbar.jsx","pages/components/DonutChart/StatVisual.jsx","pages/components/DataContainer/DataContainer.jsx","pages/components/DataTable/DataTable.jsx","pages/Gym.jsx","index.js"],"names":["TopNav","props","useState","expanded","toggleNav","className","closeNav","name","onClick","href","src","renderToggle","DreamBubble","title","LeftNavBar","Navbar","activePage","useSideNav","console","log","StatVisual","subtitle","completedLabel","incompletedLabel","completedAmount","data","labels","datasets","totalAmount","backgroundColor","hoverBackgroundColor","options","legend","display","DataContainer","children","DataTable","header","rows","tableHeader","forEach","headerStr","push","tableRows","rowArray","rowEntry","rowValue","Gym","screenWidth","pageData","updatePageData","reloadFlag","updateReloadFlag","useEffect","interval","setInterval","clearInterval","fetch","host","then","response","json","muscleProgress","recentWorkout","recentWorkoutDate","recentWorkouts","row","intensity","excerise","exercise","muscleGroups","dateStr","Date","date","toLocaleDateString","Math","round","Number","weight","reps","weeklyProgress","avgIntensity","muscleEntry","muscle","search","progress","toString","recentProgress","recentIntensity","App","urlParts","document","URL","split","loc","length","window","innerWidth","updateWidth","addEventListener","containerWrapperStyle","minHeight","marginLeft","style","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f080e32d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./navbar.css\";\nimport NavBarSpaceGuys from \"./NavBarSpaceGuys/NavBarSpaceGuys\";\n\nexport default function TopNav(props) {\n  const [expanded, toggleNav] = useState(false);\n  function renderToggle() {\n    function closeNav(name) {\n      toggleNav(false);\n      //props.updateContent(name);\n    }\n    if (expanded) {\n      return (\n        <div>\n          <p onClick={() => toggleNav(false)} className=\"closeNavStyle\">âœ•</p>\n          <div className=\"expandedContainer\">\n            <ul className=\"nav-ul\">\n              <a href=\"#school\" onClick={() => closeNav(\"school\")}><li className=\"nav-link\">school</li></a>\n              <a href=\"#gym\" onClick={() => closeNav(\"gym\")}><li className=\"nav-link theme-font\">gym</li></a>\n              <a href=\"#health\" onClick={() => closeNav(\"health\")}><li className=\"nav-link\">health</li></a>\n              <a href=\"#games\" onClick={() => closeNav(\"games\")}><li className=\"nav-link\">games</li></a>\n            </ul>\n          </div>\n        </div>\n      );\n    } else {\n      return <img onClick={() => toggleNav(true)} src=\"./hamburger.png\" className=\"hamburgerStyle\" />\n    }\n  }\n  return (\n    <div>\n      <div className=\"top-nav-style\">\n        <h1 className=\"top-nav-title\">DREAM</h1>\n        {/* {NavBarSpaceGuys()} */}\n        {renderToggle()}\n      </div>\n    </div>\n  )\n}","import React from \"react\";\nimport \"./dream-bubble.css\";\n\nexport default function DreamBubble(props) {\n  return (\n    <div className=\"titleContainer\" >\n      <h5 className='labelStyle'>\n        {props.title}\n      </h5 >\n    </div>\n  )\n}","import React from \"react\";\nimport LeftNavSpaceGuys from \"./LeftNavSpaceGuys/LeftNavSpaceGuys\";\nimport \"./left-navbar.css\";\nimport DreamBubble from \"../DreamBubble/DreamBubble\";\n\nexport default function LeftNavBar(props) {\n  return (\n    <div className=\"navStyle\">\n      <div className=\"navContent\">\n        {LeftNavSpaceGuys()}\n        <h1 className=\"left-nav-title\">DREAM</h1>\n        <div className=\"navListContainer\">\n          {DreamBubble({ title: \"school\" })}\n          {DreamBubble({ title: \"gym\" })}\n          {DreamBubble({ title: \"health\" })}\n          {DreamBubble({ title: \"games\" })}\n          {/*DreamBubble({ title: \"privacy\" })*/}\n        </div>\n        <img className=\"iconStyle\" src=\"./dream.png\" />\n        <p className=\"acronymStyle\"><em>DATA RULES EVERYTHING AROUND ME</em></p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./left-nav-space-guys.css\";\n\nexport default function LeftNavSpaceGuys() {\n  return (\n    <div className=\"containerWrapper\">\n      <div className=\"container\">\n        <img src=\"./star.png\" className=\"star1\" />\n        <img src=\"./star1.png\" className=\"star2\" />\n        <img src=\"./star.png\" className=\"star3\" />\n        <img src=\"./astronaut.png\" className=\"astronaut\" />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport \"./TopNav/TopNav\"\nimport TopNav from './TopNav/TopNav';\nimport LeftNavBar from \"./LeftNavBar/LeftNavBar\";\n\nexport default function Navbar({ activePage, useSideNav }) {\n  console.log(useSideNav);\n  return useSideNav ? <LeftNavBar /> : <TopNav />;\n}","import React from \"react\";\nimport \"./stat-visual.css\";\nimport { Doughnut } from 'react-chartjs-2';\n\n\nexport default function StatVisual({ title, subtitle, completedLabel, incompletedLabel, completedAmount, totalAmount }) {\n  const data = {\n    labels: [\n      completedLabel,\n      incompletedLabel\n    ],\n    datasets: [{\n      data: [completedAmount, totalAmount - completedAmount],\n      backgroundColor: [\n        '#7880FF',\n        '#d6d6d6',\n      ],\n      hoverBackgroundColor: [\n        'green',\n        '#b5b5b5',\n      ]\n    }]\n  };\n  const options = {\n    legend: {\n      display: false\n    },\n  }\n  return (\n    <div className=\"itemContainer\">\n      <div className=\"titleSection\">\n        <div className=\"textWrapper\">\n          <h3 className=\"statTitle\">{title}</h3>\n          <h3 className=\"statSubtitle\">{subtitle}</h3>\n        </div>\n      </div >\n      <div className=\"dataRepresentation\">\n        <div className=\"donutWrapper\">\n          <Doughnut data={data} options={options} />\n        </div>\n      </div>\n    </div >\n  )\n}","import React, { useState } from \"react\";\nimport StatVisual from \"../DonutChart/StatVisual\";\nimport \"./data-container.css\";\n/**\n * \n * @param {route, title} props \n */\nexport default function DataContainer({ title, subtitle, children}) {\n  const [apiData, updateApiData] = useState(null);\n  let graphs = [];\n\n  // if (props.route === undefined) {\n  //   props.data.forEach(graphData => {\n  //     graphs.push(StatVisual(graphData));\n  //   });\n  // } else {\n  //   const baseUrl = \"http://localhost:8080\";\n  //   console.log(baseUrl + props.route);\n\n  //   fetch(baseUrl + props.route)\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       console.log(data)\n  //       for (const graphData of data.data) {\n  //         console.log(graphData);\n  //         graphs.push(StatVisual(graphData))\n  //       }\n  //       updateApiData(graphs);\n  //     });\n  // }\n  //const data = props.route === undefined ? graphs : apiData;\n  return (\n    <div className=\"dataset-container\">\n      <h2 className=\"titleStyle\">{title}</h2>\n      <h4 className=\"data-container-subtitle\">{subtitle}</h4>\n      {children}\n      {/* <div className=\"graphContainerStyle\">\n      </div> */}\n    </div>\n  );\n}","import React from \"react\";\nimport \"./data-table.css\";\n\nexport default function DataTable({ header, rows }) {\n  let tableHeader = [];\n  if (header) {\n    header.forEach(headerStr => tableHeader.push(<th>{headerStr}</th>));\n  }\n  let tableRows = [];\n  if (rows) {\n    rows.forEach(rowArray => {\n      let rowEntry = [];\n      rowArray.forEach(rowValue => {\n        rowEntry.push(<td className=\"data-table-cell\">{rowValue}</td>);\n      });\n      tableRows.push(<tr className=\"data-table-row\">{rowEntry}</tr>);\n    });\n  }\n  return (\n    <div className=\"data-table-container\">\n      <table className=\"data-table\">\n        <thead>\n          <tr className=\"data-table-header-row\">\n            {tableHeader}\n          </tr>\n        </thead>\n        <tbody>\n          {tableRows}\n        </tbody>\n      </table>\n    </div>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport StatVisual from \"./components/DonutChart/StatVisual\";\nimport DataContainer from \"./components/DataContainer/DataContainer\";\nimport DataTable from \"./components/DataTable/DataTable\";\nimport \"./pages.css\";\n\nexport default function Gym({ screenWidth }) {\n  const [pageData, updatePageData] = useState(null);\n  const [reloadFlag, updateReloadFlag] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      updateReloadFlag(reloadFlag => !reloadFlag);\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const host = process.env.NODE_ENV === \"production\" ? \"https://dream.sahilkapur.com/server\" : \"http://localhost:8081\";\n    const endpoint = \"/gym\";\n    fetch(host + endpoint).then(response => response.json()).then(data => {\n      console.log(\"fetched\");\n      updatePageData(data);\n    });\n  }, [reloadFlag]);\n  let rows = []\n  let weeklyProgress = 0, avgWeeklyIntensity = 0;\n  let muscleProgress = [];\n  let recentWorkout = [], recentWorkoutDate = \"\";\n  if (pageData) {\n    //construct table\n    pageData.recentWorkouts.forEach(row => {\n      const excerise = row.exercise ? row.exercise : row.muscleGroups[0];\n      let dateStr = new Date(row.date).toLocaleDateString();\n      let intensity;\n      if (row.intensity) {\n        intensity = (Math.round(Number(row.intensity) * 100)) + \"%\";\n      }\n      console.log(screenWidth);\n      if (screenWidth > 482) {\n        rows.push([excerise, row.weight, row.reps, intensity, dateStr]);\n      } else {\n        rows.push([excerise, intensity, dateStr]);\n      }\n    });\n\n    //construct weekly progress\n    weeklyProgress = Math.round(Number(pageData.weeklyProgress) * 100);\n    avgWeeklyIntensity = Math.round(Number(pageData.avgIntensity) * 100);\n\n    //construct muscle progress\n    pageData.muscleProgress.forEach(muscleEntry => {\n      let title = muscleEntry.muscle;\n      if (title.search(\"horizontal\") >= 0) {\n        title = \"horiz. back\";\n      }\n      if (title.search(\"vertical\") >= 0) {\n        title = \"vert. back\";\n      }\n      muscleProgress.push(\n        StatVisual({\n          title,\n          subtitle: Math.round(Number(muscleEntry.progress) * 100).toString() + \"%\",\n          completedAmount: Math.round(Number(muscleEntry.progress) * 100),\n          totalAmount: 100,\n          completedLabel: \"completed\",\n          incompletedLabel: \"remaining\"\n        })\n      )\n    });\n    //construct recent workout\n    recentWorkout = [\n      StatVisual({\n        title: \"progress\",\n        subtitle: Math.round(Number(pageData.recentProgress) * 100).toString() + \"%\",\n        completedAmount: Math.round(Number(pageData.recentProgress) * 100),\n        totalAmount: 100,\n        completedLabel: \"completed\",\n        incompletedLabel: \"remaining\"\n      }),\n      StatVisual({\n        title: \"intensity\",\n        subtitle: Math.round(Number(pageData.recentIntensity) * 100).toString() + \"%\",\n        completedAmount: Math.round(Number(pageData.recentIntensity) * 100),\n        totalAmount: 100,\n        completedLabel: \"intensity\",\n        incompletedLabel: \"remaining intensity\"\n      })\n    ];\n    recentWorkoutDate = new Date(pageData.recentWorkoutDate).toLocaleDateString();\n  }\n  let tableHeader;\n  if (screenWidth > 482) {\n    tableHeader = [\"exercise\", \"weight (lbs)\", \"reps\", \"intensity\", \"date\"];\n  } else {\n    tableHeader = [\"exercise\", \"intensity\",\"date\"];\n  }\n  return (\n    <div>\n      <DataContainer title=\"recent workout\" subtitle={recentWorkoutDate}>\n        <div className=\"graphContainerStyle\">\n          {recentWorkout}\n        </div>\n      </DataContainer>\n\n      <DataContainer title=\"weekly progress\" subtitle=\"week starting 9/7/2020\">\n        <div className=\"graphContainerStyle\">\n          {muscleProgress}\n        </div>\n      </DataContainer>\n\n      <DataContainer title=\"recent sets\">\n        <DataTable header={tableHeader} rows={rows} />\n      </DataContainer>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Doughnut } from 'react-chartjs-2';\nimport Navbar from \"./Navbar/Navbar\";\n//import ContentContainer from \"./Content/ContentContainer\";\nimport \"./App.css\";\n\n//import pages\nimport Gym from \"./pages/Gym\";\n\nfunction App() {\n  var currentUrl = document.URL, urlParts = currentUrl.split('#');\n  let loc = (urlParts.length > 1) ? urlParts[1] : \"gym\";\n  const [activePage, changePage] = useState(loc);\n  const [screenWidth, updateWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    function handleResize() {\n      updateWidth(window.innerWidth)\n    }\n    window.addEventListener('resize', handleResize);\n  }, []);\n\n  const containerWrapperStyle = {\n    minHeight: \"90vh\",\n    marginLeft: screenWidth > 867 ? \"200px\" : \"auto\"\n  }\n  return (\n    <div>\n      <Navbar activePage useSideNav={screenWidth > 867}/>\n      <div style={containerWrapperStyle}>\n        <Gym screenWidth={screenWidth}/>\n      </div>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}